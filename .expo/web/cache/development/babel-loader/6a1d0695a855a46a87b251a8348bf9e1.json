{"ast":null,"code":"import * as React from 'react';\nexport default function useChildListeners() {\n  var _React$useRef = React.useRef({\n    action: [],\n    focus: []\n  }),\n      listeners = _React$useRef.current;\n\n  var addListener = React.useCallback(function (type, listener) {\n    listeners[type].push(listener);\n    return function () {\n      var index = listeners[type].indexOf(listener);\n      listeners[type].splice(index, 1);\n    };\n  }, [listeners]);\n  return {\n    listeners: listeners,\n    addListener: addListener\n  };\n}","map":{"version":3,"sources":["useChildListeners.tsx"],"names":["current","listeners","action","focus","addListener","index"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAMA,eAAe,SAAA,iBAAA,GAA6B;EAAA,oBACX,KAAK,CAAL,MAAA,CAI7B;IACAE,MAAM,EADN,EAAA;IAEAC,KAAK,EAAE;EAFP,CAJ6B,CADW;EAAA,IACzBF,SADyB,iBAClCD,OADkC;;EAU1C,IAAMI,WAAW,GAAG,KAAK,CAAL,WAAA,CAClB,UAAA,IAAA,EAAA,QAAA,EAAoE;IAElEH,SAAS,CAATA,IAAS,CAATA,CAAAA,IAAAA,CAAAA,QAAAA;IAEA,OAAO,YAAM;MAEX,IAAMI,KAAK,GAAGJ,SAAS,CAATA,IAAS,CAATA,CAAAA,OAAAA,CAAd,QAAcA,CAAd;MAEAA,SAAS,CAATA,IAAS,CAATA,CAAAA,MAAAA,CAAAA,KAAAA,EAAAA,CAAAA;IAJF,CAAA;EALgB,CAAA,EAYlB,CAZF,SAYE,CAZkB,CAApB;EAeA,OAAO;IACLA,SADK,EACLA,SADK;IAELG,WAAAA,EAAAA;EAFK,CAAP;AAID","sourcesContent":["import * as React from 'react';\nimport type { ListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add action listeners.\n */\nexport default function useChildListeners() {\n  const { current: listeners } = React.useRef<\n    {\n      [K in keyof ListenerMap]: ListenerMap[K][];\n    }\n  >({\n    action: [],\n    focus: [],\n  });\n\n  const addListener = React.useCallback(\n    <T extends keyof ListenerMap>(type: T, listener: ListenerMap[T]) => {\n      // @ts-expect-error: listener should be correct type according to `type`\n      listeners[type].push(listener);\n\n      return () => {\n        // @ts-expect-error: listener should be correct type according to `type`\n        const index = listeners[type].indexOf(listener);\n\n        listeners[type].splice(index, 1);\n      };\n    },\n    [listeners]\n  );\n\n  return {\n    listeners,\n    addListener,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}