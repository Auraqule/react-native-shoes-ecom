{"ast":null,"code":"'use strict';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nimport { AnimatedEvent } from \"./AnimatedEvent\";\nimport AnimatedProps from \"./nodes/AnimatedProps\";\nimport React from 'react';\nimport invariant from 'fbjs/lib/invariant';\nimport mergeRefs from \"../../../modules/mergeRefs\";\n\nfunction createAnimatedComponent(Component, defaultProps) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, '`createAnimatedComponent` does not support stateless functional components; ' + 'use a class component instead.');\n\n  var AnimatedComponent = function (_React$Component) {\n    _inheritsLoose(AnimatedComponent, _React$Component);\n\n    function AnimatedComponent(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this._invokeAnimatedPropsCallbackOnMount = false;\n      _this._eventDetachers = [];\n\n      _this._animatedPropsCallback = function () {\n        if (_this._component == null) {\n          _this._invokeAnimatedPropsCallbackOnMount = true;\n        } else if (AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY || typeof _this._component.setNativeProps !== 'function') {\n          _this.forceUpdate();\n        } else if (!_this._propsAnimated.__isNative) {\n          _this._component.setNativeProps(_this._propsAnimated.__getAnimatedValue());\n        } else {\n          throw new Error('Attempting to run JS driven animation on animated ' + 'node that has been moved to \"native\" earlier by starting an ' + 'animation with `useNativeDriver: true`');\n        }\n      };\n\n      _this._setComponentRef = mergeRefs(_this.props.forwardedRef, function (ref) {\n        _this._prevComponent = _this._component;\n        _this._component = ref;\n\n        if (ref != null && ref.getNode == null) {\n          ref.getNode = function () {\n            var _ref$constructor$name;\n\n            console.warn('%s: Calling `getNode()` on the ref of an Animated component ' + 'is no longer necessary. You can now directly use the ref ' + 'instead. This method will be removed in a future release.', (_ref$constructor$name = ref.constructor.name) !== null && _ref$constructor$name !== void 0 ? _ref$constructor$name : '<<anonymous>>');\n            return ref;\n          };\n        }\n      });\n      return _this;\n    }\n\n    var _proto = AnimatedComponent.prototype;\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this._propsAnimated && this._propsAnimated.__detach();\n\n      this._detachNativeEvents();\n    };\n\n    _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n      this._attachProps(this.props);\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      if (this._invokeAnimatedPropsCallbackOnMount) {\n        this._invokeAnimatedPropsCallbackOnMount = false;\n\n        this._animatedPropsCallback();\n      }\n\n      this._propsAnimated.setNativeView(this._component);\n\n      this._attachNativeEvents();\n    };\n\n    _proto._attachNativeEvents = function _attachNativeEvents() {\n      var _this2 = this;\n\n      var scrollableNode = this._component && this._component.getScrollableNode ? this._component.getScrollableNode() : this._component;\n\n      var _loop = function _loop(key) {\n        var prop = _this2.props[key];\n\n        if (prop instanceof AnimatedEvent && prop.__isNative) {\n          prop.__attach(scrollableNode, key);\n\n          _this2._eventDetachers.push(function () {\n            return prop.__detach(scrollableNode, key);\n          });\n        }\n      };\n\n      for (var key in this.props) {\n        _loop(key);\n      }\n    };\n\n    _proto._detachNativeEvents = function _detachNativeEvents() {\n      this._eventDetachers.forEach(function (remove) {\n        return remove();\n      });\n\n      this._eventDetachers = [];\n    };\n\n    _proto._attachProps = function _attachProps(nextProps) {\n      var oldPropsAnimated = this._propsAnimated;\n      this._propsAnimated = new AnimatedProps(nextProps, this._animatedPropsCallback);\n      oldPropsAnimated && oldPropsAnimated.__detach();\n    };\n\n    _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(newProps) {\n      this._attachProps(newProps);\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n      if (this._component !== this._prevComponent) {\n        this._propsAnimated.setNativeView(this._component);\n      }\n\n      if (this._component !== this._prevComponent || prevProps !== this.props) {\n        this._detachNativeEvents();\n\n        this._attachNativeEvents();\n      }\n    };\n\n    _proto.render = function render() {\n      var props = this._propsAnimated.__getValue();\n\n      return React.createElement(Component, _extends({}, defaultProps, props, {\n        ref: this._setComponentRef,\n        collapsable: false\n      }));\n    };\n\n    return AnimatedComponent;\n  }(React.Component);\n\n  AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY = false;\n  var propTypes = Component.propTypes;\n  return React.forwardRef(function AnimatedComponentWrapper(props, ref) {\n    return React.createElement(AnimatedComponent, _extends({}, props, ref == null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}\n\nexport default createAnimatedComponent;","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","AnimatedEvent","AnimatedProps","React","invariant","mergeRefs","createAnimatedComponent","Component","defaultProps","isReactComponent","AnimatedComponent","_React$Component","props","_this","_invokeAnimatedPropsCallbackOnMount","_eventDetachers","_animatedPropsCallback","_component","__skipSetNativeProps_FOR_TESTS_ONLY","setNativeProps","forceUpdate","_propsAnimated","__isNative","__getAnimatedValue","Error","_setComponentRef","forwardedRef","ref","_prevComponent","getNode","_ref$constructor$name","console","warn","name","_proto","componentWillUnmount","__detach","_detachNativeEvents","UNSAFE_componentWillMount","_attachProps","componentDidMount","setNativeView","_attachNativeEvents","_this2","scrollableNode","getScrollableNode","_loop","prop","__attach","push","forEach","remove","nextProps","oldPropsAnimated","UNSAFE_componentWillReceiveProps","newProps","componentDidUpdate","prevProps","render","__getValue","createElement","collapsable","propTypes","forwardRef","AnimatedComponentWrapper"],"sources":["C:/Users/USER/Desktop/nike_/node_modules/react-native-web/dist/vendor/react-native/Animated/createAnimatedComponent.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport { AnimatedEvent } from './AnimatedEvent';\nimport AnimatedProps from './nodes/AnimatedProps';\nimport React from 'react';\nimport invariant from 'fbjs/lib/invariant';\nimport mergeRefs from '../../../modules/mergeRefs';\n\nfunction createAnimatedComponent(Component, defaultProps) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, '`createAnimatedComponent` does not support stateless functional components; ' + 'use a class component instead.');\n\n  var AnimatedComponent =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(AnimatedComponent, _React$Component);\n\n    function AnimatedComponent(props) {\n      var _this;\n\n      _this = _React$Component.call(this, props) || this;\n      _this._invokeAnimatedPropsCallbackOnMount = false;\n      _this._eventDetachers = [];\n\n      _this._animatedPropsCallback = function () {\n        if (_this._component == null) {\n          // AnimatedProps is created in will-mount because it's used in render.\n          // But this callback may be invoked before mount in async mode,\n          // In which case we should defer the setNativeProps() call.\n          // React may throw away uncommitted work in async mode,\n          // So a deferred call won't always be invoked.\n          _this._invokeAnimatedPropsCallbackOnMount = true;\n        } else if (AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY || typeof _this._component.setNativeProps !== 'function') {\n          _this.forceUpdate();\n        } else if (!_this._propsAnimated.__isNative) {\n          _this._component.setNativeProps(_this._propsAnimated.__getAnimatedValue());\n        } else {\n          throw new Error('Attempting to run JS driven animation on animated ' + 'node that has been moved to \"native\" earlier by starting an ' + 'animation with `useNativeDriver: true`');\n        }\n      };\n\n      _this._setComponentRef = mergeRefs(_this.props.forwardedRef, function (ref) {\n        _this._prevComponent = _this._component;\n        _this._component = ref; // TODO: Delete this in a future release.\n\n        if (ref != null && ref.getNode == null) {\n          ref.getNode = function () {\n            var _ref$constructor$name;\n\n            console.warn('%s: Calling `getNode()` on the ref of an Animated component ' + 'is no longer necessary. You can now directly use the ref ' + 'instead. This method will be removed in a future release.', (_ref$constructor$name = ref.constructor.name) !== null && _ref$constructor$name !== void 0 ? _ref$constructor$name : '<<anonymous>>');\n            return ref;\n          };\n        }\n      });\n      return _this;\n    }\n\n    var _proto = AnimatedComponent.prototype;\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this._propsAnimated && this._propsAnimated.__detach();\n\n      this._detachNativeEvents();\n    };\n\n    _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n      this._attachProps(this.props);\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      if (this._invokeAnimatedPropsCallbackOnMount) {\n        this._invokeAnimatedPropsCallbackOnMount = false;\n\n        this._animatedPropsCallback();\n      }\n\n      this._propsAnimated.setNativeView(this._component);\n\n      this._attachNativeEvents();\n    };\n\n    _proto._attachNativeEvents = function _attachNativeEvents() {\n      var _this2 = this;\n\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      var scrollableNode = this._component && this._component.getScrollableNode ? this._component.getScrollableNode() : this._component;\n\n      var _loop = function _loop(key) {\n        var prop = _this2.props[key];\n\n        if (prop instanceof AnimatedEvent && prop.__isNative) {\n          prop.__attach(scrollableNode, key);\n\n          _this2._eventDetachers.push(function () {\n            return prop.__detach(scrollableNode, key);\n          });\n        }\n      };\n\n      for (var key in this.props) {\n        _loop(key);\n      }\n    };\n\n    _proto._detachNativeEvents = function _detachNativeEvents() {\n      this._eventDetachers.forEach(function (remove) {\n        return remove();\n      });\n\n      this._eventDetachers = [];\n    } // The system is best designed when setNativeProps is implemented. It is\n    // able to avoid re-rendering and directly set the attributes that changed.\n    // However, setNativeProps can only be implemented on leaf native\n    // components. If you want to animate a composite component, you need to\n    // re-render it. In this case, we have a fallback that uses forceUpdate.\n    ;\n\n    _proto._attachProps = function _attachProps(nextProps) {\n      var oldPropsAnimated = this._propsAnimated;\n      this._propsAnimated = new AnimatedProps(nextProps, this._animatedPropsCallback); // When you call detach, it removes the element from the parent list\n      // of children. If it goes to 0, then the parent also detaches itself\n      // and so on.\n      // An optimization is to attach the new elements and THEN detach the old\n      // ones instead of detaching and THEN attaching.\n      // This way the intermediate state isn't to go to 0 and trigger\n      // this expensive recursive detaching to then re-attach everything on\n      // the very next operation.\n\n      oldPropsAnimated && oldPropsAnimated.__detach();\n    };\n\n    _proto.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(newProps) {\n      this._attachProps(newProps);\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n      if (this._component !== this._prevComponent) {\n        this._propsAnimated.setNativeView(this._component);\n      }\n\n      if (this._component !== this._prevComponent || prevProps !== this.props) {\n        this._detachNativeEvents();\n\n        this._attachNativeEvents();\n      }\n    };\n\n    _proto.render = function render() {\n      var props = this._propsAnimated.__getValue();\n\n      return React.createElement(Component, _extends({}, defaultProps, props, {\n        ref: this._setComponentRef // The native driver updates views directly through the UI thread so we\n        // have to make sure the view doesn't get optimized away because it cannot\n        // go through the NativeViewHierarchyManager since it operates on the shadow\n        // thread.\n        ,\n        collapsable: false\n      }));\n    };\n\n    return AnimatedComponent;\n  }(React.Component);\n\n  AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY = false;\n  var propTypes = Component.propTypes;\n  return React.forwardRef(function AnimatedComponentWrapper(props, ref) {\n    return React.createElement(AnimatedComponent, _extends({}, props, ref == null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}\n\nexport default createAnimatedComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}