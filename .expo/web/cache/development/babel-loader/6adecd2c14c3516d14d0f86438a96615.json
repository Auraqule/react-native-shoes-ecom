{"ast":null,"code":"import { forwardRef, useCallback, useMemo, useRef } from 'react';\nimport createElement from \"../createElement\";\nimport css from \"../StyleSheet/css\";\nimport pick from \"../../modules/pick\";\nimport useElementLayout from \"../../hooks/useElementLayout\";\nimport useLayoutEffect from \"../../hooks/useLayoutEffect\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePlatformMethods from \"../../hooks/usePlatformMethods\";\nimport useResponderEvents from \"../../hooks/useResponderEvents\";\nimport StyleSheet from \"../StyleSheet\";\nimport TextInputState from \"../../modules/TextInputState\";\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = {\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  accessible: true,\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  children: true,\n  classList: true,\n  defaultValue: true,\n  dir: true,\n  disabled: true,\n  importantForAccessibility: true,\n  maxLength: true,\n  nativeID: true,\n  onBlur: true,\n  onChange: true,\n  onClick: true,\n  onClickCapture: true,\n  onContextMenu: true,\n  onFocus: true,\n  onScroll: true,\n  onTouchCancel: true,\n  onTouchCancelCapture: true,\n  onTouchEnd: true,\n  onTouchEndCapture: true,\n  onTouchMove: true,\n  onTouchMoveCapture: true,\n  onTouchStart: true,\n  onTouchStartCapture: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  ref: true,\n  rows: true,\n  spellCheck: true,\n  style: true,\n  value: true,\n  testID: true,\n  type: true,\n  dataSet: true,\n  onMouseDown: true,\n  onMouseEnter: true,\n  onMouseLeave: true,\n  onMouseMove: true,\n  onMouseOver: true,\n  onMouseOut: true,\n  onMouseUp: true\n};\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar TextInput = forwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = useRef(null);\n  var handleContentSizeChange = useCallback(function () {\n    var node = hostRef.current;\n\n    if (multiline && onContentSizeChange && node != null) {\n      var newHeight = node.scrollHeight;\n      var newWidth = node.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [hostRef, multiline, onContentSizeChange]);\n  var imperativeRef = useMemo(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange();\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var text = e.target.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange();\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var node = hostRef.current;\n\n    if (node != null) {\n      TextInputState._currentlyFocusedNode = node;\n\n      if (onFocus) {\n        e.nativeEvent.text = e.target.value;\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        node.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        node.select();\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostRef.current != null) {\n        hostRef.current.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n  var style = StyleSheet.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList;\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterkeyhint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(component, supportedProps);\n});\nTextInput.displayName = 'TextInput';\nTextInput.State = TextInputState;\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default TextInput;","map":{"version":3,"names":["forwardRef","useCallback","useMemo","useRef","createElement","css","pick","useElementLayout","useLayoutEffect","useMergeRefs","usePlatformMethods","useResponderEvents","StyleSheet","TextInputState","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setSelectionRange","e","forwardPropsList","accessibilityLabel","accessibilityLiveRegion","accessibilityRole","accessibilityState","accessibilityValue","accessible","autoCapitalize","autoComplete","autoCorrect","autoFocus","children","classList","defaultValue","dir","disabled","importantForAccessibility","maxLength","nativeID","onBlur","onChange","onClick","onClickCapture","onContextMenu","onFocus","onScroll","onTouchCancel","onTouchCancelCapture","onTouchEnd","onTouchEndCapture","onTouchMove","onTouchMoveCapture","onTouchStart","onTouchStartCapture","placeholder","pointerEvents","readOnly","ref","rows","spellCheck","style","value","testID","type","dataSet","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOver","onMouseOut","onMouseUp","pickProps","props","isEventComposing","nativeEvent","isComposing","keyCode","TextInput","forwardedRef","_props$autoCapitalize","autoCompleteType","_props$autoCorrect","blurOnSubmit","clearTextOnFocus","_props$editable","editable","_props$keyboardType","keyboardType","_props$multiline","multiline","_props$numberOfLines","numberOfLines","onChangeText","onContentSizeChange","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","returnKeyType","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","inputMode","dimensions","height","width","hostRef","handleContentSizeChange","current","newHeight","scrollHeight","newWidth","scrollWidth","contentSize","imperativeRef","hostNode","clear","isFocused","currentlyFocusedField","handleBlur","_currentlyFocusedNode","text","target","handleChange","handleFocus","select","handleKeyDown","stopPropagation","blurOnSubmitDefault","shouldBlurOnSubmit","key","shiftKey","isDefaultPrevented","preventDefault","blur","handleSelectionChange","document","activeElement","component","classes","textinput","compose","supportedProps","undefined","enterkeyhint","onKeyDown","onSelect","platformMethodsRef","setRef","displayName","State","create","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","margin","padding","resize"],"sources":["C:/Users/USER/Desktop/nike_/node_modules/react-native-web/dist/exports/TextInput/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { forwardRef, useCallback, useMemo, useRef } from 'react';\nimport createElement from '../createElement';\nimport css from '../StyleSheet/css';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../hooks/useElementLayout';\nimport useLayoutEffect from '../../hooks/useLayoutEffect';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../hooks/usePlatformMethods';\nimport useResponderEvents from '../../hooks/useResponderEvents';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = {\n  accessibilityLabel: true,\n  accessibilityLiveRegion: true,\n  accessibilityRole: true,\n  accessibilityState: true,\n  accessibilityValue: true,\n  accessible: true,\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  children: true,\n  classList: true,\n  defaultValue: true,\n  dir: true,\n  disabled: true,\n  importantForAccessibility: true,\n  maxLength: true,\n  nativeID: true,\n  onBlur: true,\n  onChange: true,\n  onClick: true,\n  onClickCapture: true,\n  onContextMenu: true,\n  onFocus: true,\n  onScroll: true,\n  onTouchCancel: true,\n  onTouchCancelCapture: true,\n  onTouchEnd: true,\n  onTouchEndCapture: true,\n  onTouchMove: true,\n  onTouchMoveCapture: true,\n  onTouchStart: true,\n  onTouchStartCapture: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  ref: true,\n  rows: true,\n  spellCheck: true,\n  style: true,\n  value: true,\n  testID: true,\n  type: true,\n  // unstable\n  dataSet: true,\n  onMouseDown: true,\n  onMouseEnter: true,\n  onMouseLeave: true,\n  onMouseMove: true,\n  onMouseOver: true,\n  onMouseOut: true,\n  onMouseUp: true\n};\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n}; // If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar TextInput = forwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = useRef(null);\n  var handleContentSizeChange = useCallback(function () {\n    var node = hostRef.current;\n\n    if (multiline && onContentSizeChange && node != null) {\n      var newHeight = node.scrollHeight;\n      var newWidth = node.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [hostRef, multiline, onContentSizeChange]);\n  var imperativeRef = useMemo(function () {\n    return function (hostNode) {\n      // TextInput needs to add more methods to the hostNode in addition to those\n      // added by `usePlatformMethods`. This is temporarily until an API like\n      // `TextInput.clear(hostRef)` is added to React Native.\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange();\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var text = e.target.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange();\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var node = hostRef.current;\n\n    if (node != null) {\n      TextInputState._currentlyFocusedNode = node;\n\n      if (onFocus) {\n        e.nativeEvent.text = e.target.value;\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        node.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        node.select();\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    // Prevent key events bubbling (see #612)\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostRef.current != null) {\n        hostRef.current.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n  var style = StyleSheet.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList; // 'auto' by default allows browsers to infer writing direction\n\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterkeyhint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(component, supportedProps);\n});\nTextInput.displayName = 'TextInput'; // $FlowFixMe\n\nTextInput.State = TextInputState;\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default TextInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}