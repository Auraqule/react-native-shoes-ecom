{"ast":null,"code":"import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar initialURL = canUseDOM ? window.location.href : '';\nvar Linking = {\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  canOpenURL: function canOpenURL() {\n    return Promise.resolve(true);\n  },\n  getInitialURL: function getInitialURL() {\n    return Promise.resolve(initialURL);\n  },\n  openURL: function openURL(url) {\n    try {\n      open(url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  _validateURL: function _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n};\n\nvar open = function open(url) {\n  if (canUseDOM) {\n    window.location = new URL(url, window.location).toString();\n  }\n};\n\nexport default Linking;","map":{"version":3,"names":["canUseDOM","invariant","initialURL","window","location","href","Linking","addEventListener","removeEventListener","canOpenURL","Promise","resolve","getInitialURL","openURL","url","open","e","reject","_validateURL","URL","toString"],"sources":["C:/Users/USER/Desktop/nike_/node_modules/react-native-web/dist/exports/Linking/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar initialURL = canUseDOM ? window.location.href : '';\nvar Linking = {\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  canOpenURL: function canOpenURL() {\n    return Promise.resolve(true);\n  },\n  getInitialURL: function getInitialURL() {\n    return Promise.resolve(initialURL);\n  },\n  openURL: function openURL(url) {\n    try {\n      open(url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n  _validateURL: function _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n};\n\nvar open = function open(url) {\n  if (canUseDOM) {\n    window.location = new URL(url, window.location).toString();\n  }\n};\n\nexport default Linking;"],"mappings":"AASA,SAASA,SAAT,QAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,IAAIC,UAAU,GAAGF,SAAS,GAAGG,MAAM,CAACC,QAAP,CAAgBC,IAAnB,GAA0B,EAApD;AACA,IAAIC,OAAO,GAAG;EACZC,gBAAgB,EAAE,SAASA,gBAAT,GAA4B,CAAE,CADpC;EAEZC,mBAAmB,EAAE,SAASA,mBAAT,GAA+B,CAAE,CAF1C;EAGZC,UAAU,EAAE,SAASA,UAAT,GAAsB;IAChC,OAAOC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;EACD,CALW;EAMZC,aAAa,EAAE,SAASA,aAAT,GAAyB;IACtC,OAAOF,OAAO,CAACC,OAAR,CAAgBT,UAAhB,CAAP;EACD,CARW;EASZW,OAAO,EAAE,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;IAC7B,IAAI;MACFC,IAAI,CAACD,GAAD,CAAJ;MACA,OAAOJ,OAAO,CAACC,OAAR,EAAP;IACD,CAHD,CAGE,OAAOK,CAAP,EAAU;MACV,OAAON,OAAO,CAACO,MAAR,CAAeD,CAAf,CAAP;IACD;EACF,CAhBW;EAiBZE,YAAY,EAAE,SAASA,YAAT,CAAsBJ,GAAtB,EAA2B;IACvCb,SAAS,CAAC,OAAOa,GAAP,KAAe,QAAhB,EAA0B,2CAA2CA,GAArE,CAAT;IACAb,SAAS,CAACa,GAAD,EAAM,8BAAN,CAAT;EACD;AApBW,CAAd;;AAuBA,IAAIC,IAAI,GAAG,SAASA,IAAT,CAAcD,GAAd,EAAmB;EAC5B,IAAId,SAAJ,EAAe;IACbG,MAAM,CAACC,QAAP,GAAkB,IAAIe,GAAJ,CAAQL,GAAR,EAAaX,MAAM,CAACC,QAApB,EAA8BgB,QAA9B,EAAlB;EACD;AACF,CAJD;;AAMA,eAAed,OAAf"},"metadata":{},"sourceType":"module"}